<launch>
    <!-- Arguments to override default params -->
    <arg name="task_max_time"           default="0.55"/>
    <param name="max_gripper_velocity"  value="0.3"/>
    <param name="max_dof_velocity"      value="1.5"/>

    <!-- Defines which world building routines we use, and which task specification -->
    <param name="deformable_type"       value="cloth"                                   type="string"/>
    <param name="task_type"             value="cloth_placemat_live_robot_linear_motion" type="string"/>

    <!-- planner, controller params -->
    <arg name="desired_motion_scale_factor"     default="1"/>

    <!-- READ THIS! READ THIS! READ THIS! All of the "tabbed in" parameters are measured in the bullet(task) frame, but unscaled distances -->

        <!-- Table size params: +'ve X points towards the door -->
        <arg name="table_x_half_extents"    value="$(eval 30.0 / 2.0 * 0.0254)"/> <!-- 30 inches is the width of the table, converted into meters -->
        <arg name="table_y_half_extents"    value="$(eval 42.0 / 2.0 * 0.0254)"/> <!-- 42 inches is the length of the table, converted into meters -->
        <!--<arg name="table_x_half_extents"    value="$(eval 23.625 / 2.0 * 0.0254)"/> &lt;!&ndash; 23.625 inches is the width of the table, converted into meters &ndash;&gt;-->
        <!--<arg name="table_y_half_extents"    value="$(eval 47.25 / 2.0 * 0.0254)"/>  &lt;!&ndash; 47.25  inches is the length of the table, converted into meters &ndash;&gt;-->
        <arg name="table_height"            value="0.7005"/>                      <!-- Height is mostly arbitrary, set to be above the floor somewhere and work well with the SDF resolution -->
        <arg name="table_thickness"         value="0.1005"/>

        <param name="table_x_half_extents"  value="$(arg table_x_half_extents)" type="double"/>
        <param name="table_y_half_extents"  value="$(arg table_y_half_extents)" type="double"/>
        <param name="table_height"          value="$(arg table_height)"         type="double"/>
        <param name="table_thickness"       value="$(arg table_thickness)"      type="double"/>
        <!-- TODO: Table legs? -->

        <!-- Table position params -->
        <arg name="table_surface_x"         value="0.0"/>
        <arg name="table_surface_y"         value="0.0"/>
        <arg name="table_surface_z"         value="$(arg table_height)"/>

        <param name="table_surface_x"       value="$(arg table_surface_x)"  type="double"/>
        <param name="table_surface_y"       value="$(arg table_surface_y)"  type="double"/>
        <param name="table_surface_z"       value="$(arg table_surface_z)"  type="double"/>

        <!-- Cloth size params -->
        <arg   name="cloth_x_size"                  value="$(eval 13.0 * 0.0254 / 2.0)"/> <!-- 1/4 of the black placemat area: 13/2 inches to meters -->
        <arg   name="cloth_y_size"                  value="$(eval 18.0 * 0.0254 / 2.0)"/> <!-- 1/4 of the black placemat area: 18/2 inches to meters -->
        <arg   name="cloth_num_control_points_x"    value="3"/>
        <arg   name="cloth_num_control_points_y"    value="4"/>

        <param name="cloth_x_size"                  value="$(arg cloth_x_size)"                 type="double"/>
        <param name="cloth_y_size"                  value="$(arg cloth_y_size)"                 type="double"/>
        <param name="cloth_num_control_points_x"    value="$(arg cloth_num_control_points_x)"   type="int"/>
        <param name="cloth_num_control_points_y"    value="$(arg cloth_num_control_points_y)"   type="int"/>

        <!-- Cloth position params -->
        <param name="cloth_com_x"           value="$(eval table_surface_x - 0.5)"   type="double"/>
        <param name="cloth_com_y"           value="0.0"                             type="double"/>
        <param name="cloth_com_z"           value="$(eval table_surface_z + 0.1)"   type="double"/>

        <!-- World parameters for planning - used by both nodes -->
        <arg name="grid_resolution"         value="0.02"/>
        <arg name="world_x_min"             value="$(eval table_surface_x - table_x_half_extents * 2.4)"/>
        <arg name="world_x_max"             value="$(eval table_surface_x + table_x_half_extents * 1.5)"/>
        <arg name="world_y_min"             value="$(eval table_surface_y - table_y_half_extents * 1.5)"/>
        <arg name="world_y_max"             value="$(eval table_surface_y + table_y_half_extents * 1.5)"/>
        <arg name="world_z_min"             value="$(eval table_height - 0.1)"/>
        <arg name="world_z_max"             value="$(eval table_height + 0.2)"/>

        <param name="world_x_step"          value="$(arg grid_resolution)"  type="double"/>
        <param name="world_x_min"           value="$(arg world_x_min)"      type="double"/>
        <param name="world_x_max"           value="$(arg world_x_max)"      type="double"/>

        <param name="world_y_step"          value="$(arg grid_resolution)"  type="double"/>
        <param name="world_y_min"           value="$(arg world_y_min)"      type="double"/>
        <param name="world_y_max"           value="$(arg world_y_max)"      type="double"/>

        <param name="world_z_step"          value="$(arg grid_resolution)"  type="double"/>
        <param name="world_z_min"           value="$(arg world_z_min)"      type="double"/>
        <param name="world_z_max"           value="$(arg world_z_max)"      type="double"/>

    <group ns="static_transform_publishers">
        <!-- TF2 parameters and settings to enable live robot demonstrations -->
        <!-- Note that we are using convenient coordinates for the table, so we need a transform to move to connect to the world frame -->
        <node name="bullet_to_table_surface_tf_publisher"
              pkg="tf"
              type="static_transform_publisher"
              args="-$(arg table_surface_x) -$(arg table_surface_y) -$(arg table_surface_z) 0 0 0 table_surface bullet_origin 10"/>
    </group>

    <group ns="deform_simulator_node">
        <param name="num_simsteps_per_gripper_command"  value="10"      type="int"/>
        <param name="cloth_linear_stiffness"            value="0.8"     type="double"/>

        <param name="viewer_width"                      value="800"     type="int"/>
        <param name="viewer_height"                     value="800"     type="int"/>
    </group>


    <group ns="smmap_planner_node">
        <!-- TODO: Update these parameters to make them work for this task -->
        <group ns="task">
            <param name="max_time"                              value="$(arg task_max_time)"                type="double"/>
            <param name="error_threshold_along_normal"          value="0.04"                                type="double"/>
            <param name="error_threshold_distance_to_normal"    value="0.02"                                type="double"/>
            <param name="error_threshold_task_done"             value="0.15"                                type="double"/>
            <param name="max_stretch_factor"                    value="1.01"                                type="double"/>
            <param name="max_band_length"                       value="0.305"                               type="double"/>
            <param name="desired_motion_scale_factor"           value="$(arg desired_motion_scale_factor)"  type="double"/>
        </group>

        <param name="controller_min_distance_to_obstacles"      value="0.085"                               type="double"/>

        <param name="enable_stuck_detection"                                value="false"        type="bool"/>
        <!-- Unused, but need to be set -->
        <group ns="stuck_detection">
            <param name="num_lookahead_steps"                               value="10"          type="int"/>
            <param name="band_overstretch_prediction_annealing_factor"      value="0.5"         type="double"/>
            <param name="max_pose_history_steps"                            value="100"         type="int"/>
            <param name="error_delta_threshold_for_progress"                value="1.0"         type="double"/>
            <param name="grippers_distance_delta_threshold_for_progress"    value="0.03"        type="double"/>
        </group>

        <group ns="diminishing_rigidity">
            <param name="default_deformability"         value="10.0"            type="double"/>
        </group>

        <group ns="straight_line_motion_controller">
            <group ns="left_deltas">
                <rosparam>
                    t:  [ 0.0,    2.301,  2.931]
                    vx: [-0.002, -0.001, -0.002]
                    vy: [ 0.000,  0.000,  0.000]
                    vz: [ 0.000,  0.000,  0.000]
                    wx: [ 0.000,  0.000,  0.000]
                    wy: [ 0.000,  0.050,  0.000]
                    wz: [ 0.000,  0.000,  0.000]
                </rosparam>
            </group>
            <group ns="right_deltas">
                <rosparam>
                    t:  [ 0.0,    2.301,  2.931]
                    vx: [-0.002, -0.001, -0.002]
                    vy: [ 0.000,  0.000,  0.000]
                    vz: [ 0.000,  0.000,  0.000]
                    wx: [ 0.000,  0.000,  0.000]
                    wy: [ 0.000,  0.050,  0.000]
                    wz: [ 0.000,  0.000,  0.000]
                </rosparam>
            </group>
        </group>

        <!-- Not used, but needed for Task Specification -->
        <group ns="jacobian_controller">
            <param name="collision_scaling_factor"      value="200.0"           type="double"/>
        </group>

        <!-- These are set by the generic experiment launch file -->
        <!--<group ns="constraint_model">-->
            <!--<param name="translational_dir_deformability"   value="$(arg translational_dir_deformability)"        type="double"/>-->
            <!--<param name="translational_dis_deformability"   value="$(arg translational_dis_deformability)"        type="double"/>-->
            <!--<param name="rotational_dis_deformability"      value="$(arg rotational_dis_deformability)"           type="double"/>-->
        <!--</group>-->
    </group>
</launch>
